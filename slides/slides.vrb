\frametitle{std::atomic example}

  \begin{minted}[fontsize=\scriptsize]{cpp}
    template <typename ITER>
    int parallel_sum(ITER beg, ITER end)
    {
      auto len = end - beg;
      if(len < 420)
      return std::accumulate(beg, end, 0);

      ITER mid = beg + len/2;
      auto handle = std::async(std::launch::async,
                               parallel_sum<ITER>, mid, end);
      int sum = parallel_sum(beg, mid);
      return sum + handle.get();
    }

    int main()
    {
      std::vector<int> v(42000, 1);
      std::cout << "The sum is " << parallel_sum(v.begin(), v.end()) << '\n';
      // The sum is 42000
    }
  \end{minted}
